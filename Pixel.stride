<?xml version="1.0" encoding="UTF-8"?>
<class name="Pixel" enable="true" strideversion="1">
    <javadoc xml:space="preserve">Class that references a pixel in a picture. Pixel stands for picture element where picture is abbreviated pix.  A pixel has a column (x) and row (y) location in a picture.  A pixel knows how to get and set the red, green, blue, and alpha values in the picture.  A pixel also knows how to get and set the color using a Color object.
@author Barb Ericson ericson@cc.gatech.edu</javadoc>
    <imports>
        <import target="java.awt.Color" enable="true"/>
        <import target="java.awt.Image" enable="true"/>
        <import target="java.awt.image.BufferedImage" enable="true"/>
    </imports>
    <implements/>
    <fields>
        <comment xml:space="preserve">//////////////////////// fields /////////////////////////////////// the digital picture this pixel belongs to</comment>
        <variable access="private" type="BufferedImage" type-java="BufferedImage" name="image" enable="true"/>
        <comment xml:space="preserve">the x (column) location of this pixel in the picture; (0,0) is top left</comment>
        <variable access="private" type="int" type-java="int" name="x" enable="true"/>
        <comment xml:space="preserve">the y (row) location of this pixel in the picture; (0,0) is top left</comment>
        <variable access="private" type="int" type-java="int" name="y" enable="true"/>
    </fields>
    <constructors>
        <comment xml:space="preserve">//////////////////// constructors /////////////////////////////////</comment>
        <constructor access="public" enable="true">
            <javadoc xml:space="preserve">A constructor that takes the x and y location for the pixel and the picture the pixel is coming from @param image the image that the pixel is in @param x the x location of the pixel in the picture @param y the y location of the pixel in the picture</javadoc>
            <params>
                <param type="BufferedImage" type-java="BufferedImage" name="image"/>
                <param type="int" type-java="int" name="x"/>
                <param type="int" type-java="int" name="y"/>
            </params>
            <throws/>
            <body>
                <comment xml:space="preserve">set the picture</comment>
                <assign dest="this . image" dest-java="this . image" src="image" src-java="image" enable="true"/>
                <comment xml:space="preserve">set the x location</comment>
                <assign dest="this . x" dest-java="this . x" src="x" src-java="x" enable="true"/>
                <comment xml:space="preserve">set the y location</comment>
                <assign dest="this . y" dest-java="this . y" src="y" src-java="y" enable="true"/>
            </body>
        </constructor>
    </constructors>
    <methods>
        <comment xml:space="preserve">/////////////////////// methods //////////////////////////////</comment>
        <method access="public" type="int" type-java="int" name="getX" enable="true">
            <javadoc xml:space="preserve">Method to get the x location of this pixel. @return the x location of the pixel in the picture</javadoc>
            <params/>
            <throws/>
            <body>
                <return value="x" value-java="x" enable="true"/>
            </body>
        </method>
        <method access="public" type="int" type-java="int" name="getY" enable="true">
            <javadoc xml:space="preserve">Method to get the y location of this pixel. @return the y location of the pixel in the picture</javadoc>
            <params/>
            <throws/>
            <body>
                <return value="y" value-java="y" enable="true"/>
            </body>
        </method>
        <method access="public" type="int" type-java="int" name="getRow" enable="true">
            <javadoc xml:space="preserve">Method to get the row (y value) @return the row (y value) of the pixel in the picture</javadoc>
            <params/>
            <throws/>
            <body>
                <return value="y" value-java="y" enable="true"/>
            </body>
        </method>
        <method access="public" type="int" type-java="int" name="getCol" enable="true">
            <javadoc xml:space="preserve">Method to get the column (x value) @return the column (x value) of the pixel</javadoc>
            <params/>
            <throws/>
            <body>
                <return value="x" value-java="x" enable="true"/>
            </body>
        </method>
        <method access="public" type="int" type-java="int" name="getAlpha" enable="true">
            <javadoc xml:space="preserve">Method to get the amount of alpha (transparency) at this pixel. It will be from 0-255. @return the amount of alpha (transparency)</javadoc>
            <params/>
            <throws/>
            <body>
                <comment xml:space="preserve">get the value at the location from the picture as a 32 bit int with alpha, red, green, blue each taking 8 bits from left to right</comment>
                <variable type="int" type-java="int" name="value" value="image . getRGB ( x , y )" value-java="image . getRGB ( x , y )" enable="true"/>
                <comment xml:space="preserve">get the alpha value (starts at 25 so shift right 24) then and it with all 1's for the first 8 bits to keep end up with from 0 to 255</comment>
                <variable type="int" type-java="int" name="alpha" value="( value &gt;&gt; 24 ) &amp; 0xff" value-java="( value &gt;&gt; 24 ) &amp; 0xff" enable="true"/>
                <return value="alpha" value-java="alpha" enable="true"/>
            </body>
        </method>
        <method access="public" type="int" type-java="int" name="getRed" enable="true">
            <javadoc xml:space="preserve">Method to get the amount of red at this pixel.  It will be from 0-255 with 0 being no red and 255 being as much red as you can have. @return the amount of red from 0 for none to 255 for max</javadoc>
            <params/>
            <throws/>
            <body>
                <comment xml:space="preserve">get the value at the location from the picture as a 32 bit int with alpha, red, green, blue each taking 8 bits from left to right</comment>
                <variable type="int" type-java="int" name="value" value="image . getRGB ( x , y )" value-java="image . getRGB ( x , y )" enable="true"/>
                <comment xml:space="preserve">get the red value (starts at 17 so shift right 16) then AND it with all 1's for the first 8 bits to end up with a resulting value from 0 to 255</comment>
                <variable type="int" type-java="int" name="red" value="( value &gt;&gt; 16 ) &amp; 0xff" value-java="( value &gt;&gt; 16 ) &amp; 0xff" enable="true"/>
                <return value="red" value-java="red" enable="true"/>
            </body>
        </method>
        <method access="public" static="true" type="int" type-java="int" name="getRed" enable="true">
            <javadoc xml:space="preserve">Method to get the red value from a pixel represented as an int @param value the color value as an int @return the amount of red</javadoc>
            <params>
                <param type="int" type-java="int" name="value"/>
            </params>
            <throws/>
            <body>
                <variable type="int" type-java="int" name="red" value="( value &gt;&gt; 16 ) &amp; 0xff" value-java="( value &gt;&gt; 16 ) &amp; 0xff" enable="true"/>
                <return value="red" value-java="red" enable="true"/>
            </body>
        </method>
        <method access="public" type="int" type-java="int" name="getGreen" enable="true">
            <javadoc xml:space="preserve">Method to get the amount of green at this pixel.  It will be from 0-255 with 0 being no green and 255 being as much green as you can have. @return the amount of green from 0 for none to 255 for max</javadoc>
            <params/>
            <throws/>
            <body>
                <comment xml:space="preserve">get the value at the location from the picture as a 32 bit int with alpha, red, green, blue each taking 8 bits from left to right</comment>
                <variable type="int" type-java="int" name="value" value="image . getRGB ( x , y )" value-java="image . getRGB ( x , y )" enable="true"/>
                <comment xml:space="preserve">get the green value (starts at 9 so shift right 8)</comment>
                <variable type="int" type-java="int" name="green" value="( value &gt;&gt; 8 ) &amp; 0xff" value-java="( value &gt;&gt; 8 ) &amp; 0xff" enable="true"/>
                <return value="green" value-java="green" enable="true"/>
            </body>
        </method>
        <method access="public" static="true" type="int" type-java="int" name="getGreen" enable="true">
            <javadoc xml:space="preserve">Method to get the green value from a pixel represented as an int @param value the color value as an int @return the amount of green</javadoc>
            <params>
                <param type="int" type-java="int" name="value"/>
            </params>
            <throws/>
            <body>
                <variable type="int" type-java="int" name="green" value="( value &gt;&gt; 8 ) &amp; 0xff" value-java="( value &gt;&gt; 8 ) &amp; 0xff" enable="true"/>
                <return value="green" value-java="green" enable="true"/>
            </body>
        </method>
        <method access="public" type="int" type-java="int" name="getBlue" enable="true">
            <javadoc xml:space="preserve">Method to get the amount of blue at this pixel.  It will be from 0-255 with 0 being no blue and 255 being as much blue as you can have. @return the amount of blue from 0 for none to 255 for max</javadoc>
            <params/>
            <throws/>
            <body>
                <comment xml:space="preserve">get the value at the location from the picture as a 32 bit int with alpha, red, green, blue each taking 8 bits from left to right</comment>
                <variable type="int" type-java="int" name="value" value="image . getRGB ( x , y )" value-java="image . getRGB ( x , y )" enable="true"/>
                <comment xml:space="preserve">get the blue value (starts at 0 so no shift required)</comment>
                <variable type="int" type-java="int" name="blue" value="value &amp; 0xff" value-java="value &amp; 0xff" enable="true"/>
                <return value="blue" value-java="blue" enable="true"/>
            </body>
        </method>
        <method access="public" static="true" type="int" type-java="int" name="getBlue" enable="true">
            <javadoc xml:space="preserve">Method to get the blue value from a pixel represented as an int @param value the color value as an int @return the amount of blue</javadoc>
            <params>
                <param type="int" type-java="int" name="value"/>
            </params>
            <throws/>
            <body>
                <variable type="int" type-java="int" name="blue" value="value &amp; 0xff" value-java="value &amp; 0xff" enable="true"/>
                <return value="blue" value-java="blue" enable="true"/>
            </body>
        </method>
        <method access="public" type="Color" type-java="Color" name="getColor" enable="true">
            <javadoc xml:space="preserve">Method to get a color object that represents the color at this pixel. @return a color object that represents the pixel color</javadoc>
            <params/>
            <throws/>
            <body>
                <comment xml:space="preserve">get the value at the location from the picture as a 32 bit int with alpha, red, green, blue each taking 8 bits from left to right</comment>
                <variable type="int" type-java="int" name="value" value="image . getRGB ( x , y )" value-java="image . getRGB ( x , y )" enable="true"/>
                <comment xml:space="preserve">get the red value (starts at 17 so shift right 16) then AND it with all 1's for the first 8 bits to end up with a resulting value from 0 to 255</comment>
                <variable type="int" type-java="int" name="red" value="( value &gt;&gt; 16 ) &amp; 0xff" value-java="( value &gt;&gt; 16 ) &amp; 0xff" enable="true"/>
                <comment xml:space="preserve">get the green value (starts at 9 so shift right 8)</comment>
                <variable type="int" type-java="int" name="green" value="( value &gt;&gt; 8 ) &amp; 0xff" value-java="( value &gt;&gt; 8 ) &amp; 0xff" enable="true"/>
                <comment xml:space="preserve">get the blue value (starts at 0 so no shift required)</comment>
                <variable type="int" type-java="int" name="blue" value="value &amp; 0xff" value-java="value &amp; 0xff" enable="true"/>
                <return value="new Color ( red , green , blue )" value-java="new Color ( red , green , blue )" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="setColor" enable="true">
            <javadoc xml:space="preserve">Method to set the pixel color to the passed in color object. @param newColor the new color to use</javadoc>
            <params>
                <param type="Color" type-java="Color" name="newColor"/>
            </params>
            <throws/>
            <body>
                <comment xml:space="preserve">set the red, green, and blue values</comment>
                <variable type="int" type-java="int" name="red" value="newColor . getRed ( )" value-java="newColor . getRed ( )" enable="true"/>
                <variable type="int" type-java="int" name="green" value="newColor . getGreen ( )" value-java="newColor . getGreen ( )" enable="true"/>
                <variable type="int" type-java="int" name="blue" value="newColor . getBlue ( )" value-java="newColor . getBlue ( )" enable="true"/>
                <comment xml:space="preserve">update the associated picture</comment>
                <call expression="updatePicture ( this . getAlpha ( ) , red , green , blue )" expression-java="updatePicture ( this . getAlpha ( ) , red , green , blue )" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="updatePicture" enable="true">
            <javadoc xml:space="preserve">Method to update the picture based on the passed color values for this pixel @param alpha the alpha (transparency) at this pixel @param red the red value for the color at this pixel @param green the green value for the color at this pixel @param blue the blue value for the color at this pixel</javadoc>
            <params>
                <param type="int" type-java="int" name="alpha"/>
                <param type="int" type-java="int" name="red"/>
                <param type="int" type-java="int" name="green"/>
                <param type="int" type-java="int" name="blue"/>
            </params>
            <throws/>
            <body>
                <comment xml:space="preserve">create a 32 bit int with alpha, red, green blue from left to right</comment>
                <variable type="int" type-java="int" name="value" value="( alpha &lt;&lt; 24 ) + ( red &lt;&lt; 16 ) + ( green &lt;&lt; 8 ) + blue" value-java="( alpha &lt;&lt; 24 ) + ( red &lt;&lt; 16 ) + ( green &lt;&lt; 8 ) + blue" enable="true"/>
                <comment xml:space="preserve">update the picture with the int value</comment>
                <call expression="image . setRGB ( x , y , value )" expression-java="image . setRGB ( x , y , value )" enable="true"/>
            </body>
        </method>
        <method access="private" static="true" type="int" type-java="int" name="correctValue" enable="true">
            <javadoc xml:space="preserve">Method to correct a color value to be within 0 to 255 @param the value to use @return a value within 0 to 255</javadoc>
            <params>
                <param type="int" type-java="int" name="value"/>
            </params>
            <throws/>
            <body>
                <if condition="value &lt; 0" condition-java="value &lt; 0" enable="true">
                    <ifStatements>
                        <assign dest="value" dest-java="value" src="0" src-java="0" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="value &gt; 255" condition-java="value &gt; 255" enable="true">
                    <ifStatements>
                        <assign dest="value" dest-java="value" src="255" src-java="255" enable="true"/>
                    </ifStatements>
                </if>
                <return value="value" value-java="value" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="setRed" enable="true">
            <javadoc xml:space="preserve">Method to set the red to a new red value @param value the new value to use</javadoc>
            <params>
                <param type="int" type-java="int" name="value"/>
            </params>
            <throws/>
            <body>
                <comment xml:space="preserve">set the red value to the corrected value</comment>
                <variable type="int" type-java="int" name="red" value="correctValue ( value )" value-java="correctValue ( value )" enable="true"/>
                <comment xml:space="preserve">update the pixel value in the picture</comment>
                <call expression="updatePicture ( getAlpha ( ) , red , getGreen ( ) , getBlue ( ) )" expression-java="updatePicture ( getAlpha ( ) , red , getGreen ( ) , getBlue ( ) )" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="setGreen" enable="true">
            <javadoc xml:space="preserve">Method to set the green to a new green value @param value the value to use</javadoc>
            <params>
                <param type="int" type-java="int" name="value"/>
            </params>
            <throws/>
            <body>
                <comment xml:space="preserve">set the green value to the corrected value</comment>
                <variable type="int" type-java="int" name="green" value="correctValue ( value )" value-java="correctValue ( value )" enable="true"/>
                <comment xml:space="preserve">update the pixel value in the picture</comment>
                <call expression="updatePicture ( getAlpha ( ) , getRed ( ) , green , getBlue ( ) )" expression-java="updatePicture ( getAlpha ( ) , getRed ( ) , green , getBlue ( ) )" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="setBlue" enable="true">
            <javadoc xml:space="preserve">Method to set the blue to a new blue value @param value the new value to use</javadoc>
            <params>
                <param type="int" type-java="int" name="value"/>
            </params>
            <throws/>
            <body>
                <comment xml:space="preserve">set the blue value to the corrected value</comment>
                <variable type="int" type-java="int" name="blue" value="correctValue ( value )" value-java="correctValue ( value )" enable="true"/>
                <comment xml:space="preserve">update the pixel value in the picture</comment>
                <call expression="updatePicture ( getAlpha ( ) , getRed ( ) , getGreen ( ) , blue )" expression-java="updatePicture ( getAlpha ( ) , getRed ( ) , getGreen ( ) , blue )" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="setAlpha" enable="true">
            <javadoc xml:space="preserve">Method to set the alpha (transparency) to a new alpha value @param value the new value to use</javadoc>
            <params>
                <param type="int" type-java="int" name="value"/>
            </params>
            <throws/>
            <body>
                <comment xml:space="preserve">make sure that the alpha is from 0 to 255</comment>
                <variable type="int" type-java="int" name="alpha" value="correctValue ( value )" value-java="correctValue ( value )" enable="true"/>
                <comment xml:space="preserve">update the associated picture</comment>
                <call expression="updatePicture ( alpha , getRed ( ) , getGreen ( ) , getBlue ( ) )" expression-java="updatePicture ( alpha , getRed ( ) , getGreen ( ) , getBlue ( ) )" enable="true"/>
            </body>
        </method>
        <method access="public" type="double" type-java="double" name="colorDistance" enable="true">
            <javadoc xml:space="preserve">Method to get the distance between this pixel's color and the passed color @param testColor the color to compare to @return the distance between this pixel's color and the passed color</javadoc>
            <params>
                <param type="Color" type-java="Color" name="testColor"/>
            </params>
            <throws/>
            <body>
                <variable type="double" type-java="double" name="redDistance" value="this . getRed ( ) - testColor . getRed ( )" value-java="this . getRed ( ) - testColor . getRed ( )" enable="true"/>
                <variable type="double" type-java="double" name="greenDistance" value="this . getGreen ( ) - testColor . getGreen ( )" value-java="this . getGreen ( ) - testColor . getGreen ( )" enable="true"/>
                <variable type="double" type-java="double" name="blueDistance" value="this . getBlue ( ) - testColor . getBlue ( )" value-java="this . getBlue ( ) - testColor . getBlue ( )" enable="true"/>
                <variable type="double" type-java="double" name="distance" value="Math . sqrt ( redDistance * redDistance + greenDistance * greenDistance + blueDistance * blueDistance )" value-java="Math . sqrt ( redDistance * redDistance + greenDistance * greenDistance + blueDistance * blueDistance )" enable="true"/>
                <return value="distance" value-java="distance" enable="true"/>
            </body>
        </method>
        <method access="public" static="true" type="double" type-java="double" name="colorDistance" enable="true">
            <javadoc xml:space="preserve">Method to compute the color distances between two color objects @param color1 a color object @param color2 a color object @return the distance between the two colors</javadoc>
            <params>
                <param type="Color" type-java="Color" name="color1"/>
                <param type="Color" type-java="Color" name="color2"/>
            </params>
            <throws/>
            <body>
                <variable type="double" type-java="double" name="redDistance" value="color1 . getRed ( ) - color2 . getRed ( )" value-java="color1 . getRed ( ) - color2 . getRed ( )" enable="true"/>
                <variable type="double" type-java="double" name="greenDistance" value="color1 . getGreen ( ) - color2 . getGreen ( )" value-java="color1 . getGreen ( ) - color2 . getGreen ( )" enable="true"/>
                <variable type="double" type-java="double" name="blueDistance" value="color1 . getBlue ( ) - color2 . getBlue ( )" value-java="color1 . getBlue ( ) - color2 . getBlue ( )" enable="true"/>
                <variable type="double" type-java="double" name="distance" value="Math . sqrt ( redDistance * redDistance + greenDistance * greenDistance + blueDistance * blueDistance )" value-java="Math . sqrt ( redDistance * redDistance + greenDistance * greenDistance + blueDistance * blueDistance )" enable="true"/>
                <return value="distance" value-java="distance" enable="true"/>
            </body>
        </method>
        <method access="public" type="double" type-java="double" name="getAverage" enable="true">
            <javadoc xml:space="preserve">Method to get the average of the colors of this pixel @return the average of the red, green, and blue values</javadoc>
            <params/>
            <throws/>
            <body>
                <variable type="double" type-java="double" name="average" value="( getRed ( ) + getGreen ( ) + getBlue ( ) ) / 3.0" value-java="( getRed ( ) + getGreen ( ) + getBlue ( ) ) / 3.0" enable="true"/>
                <return value="average" value-java="average" enable="true"/>
            </body>
        </method>
        <method access="public" type="String" type-java="String" name="toString" enable="true">
            <javadoc xml:space="preserve">Method to return a string with information about this pixel @return a string with information about this pixel</javadoc>
            <params/>
            <throws/>
            <body>
                <return value="&quot;Pixel row=&quot; + getRow ( ) + &quot; col=&quot; + getCol ( ) + &quot; red=&quot; + getRed ( ) + &quot; green=&quot; + getGreen ( ) + &quot; blue=&quot; + getBlue ( )" value-java="&quot;Pixel row=&quot; + getRow ( ) + &quot; col=&quot; + getCol ( ) + &quot; red=&quot; + getRed ( ) + &quot; green=&quot; + getGreen ( ) + &quot; blue=&quot; + getBlue ( )" enable="true"/>
            </body>
        </method>
    </methods>
</class>
